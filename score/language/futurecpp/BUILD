#
# Copyright (C) 2015-2023, Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#

load("//score/language/futurecpp:copts.bzl", "SCORE_LANGUAGE_FUTURECPP_ASSERT_DEFINES", "SCORE_LANGUAGE_FUTURECPP_TEST_COPTS", "SCORE_LANGUAGE_FUTURECPP_TEST_LINKOPTS")

config_setting(
    name = "opt_build",
    values = {
        "compilation_mode": "opt",
    },
)

cc_library(
    name = "math",
    srcs = [
        "src/math.c",
    ],
    hdrs = [
        "include/score/private/math/cmath.h",
    ],
    copts = ["-fno-builtin"],
    includes = ["include"],
    tags = ["asil-b"],
)

cc_library(
    name = "futurecpp",
    srcs = [
        "src/assert.cpp",
        "src/charconv.cpp",
        "src/hash.cpp",
        "src/intrusive_forward_list.cpp",
        "src/jthread.cpp",
        "src/memory_resource.cpp",
        "src/stop_token.cpp",
        "src/string.cpp",
    ],
    hdrs = [
        "include/score/algorithm.hpp",
        "include/score/apply.hpp",
        "include/score/assert.hpp",
        "include/score/bit.hpp",
        "include/score/blank.hpp",
        "include/score/callback.hpp",
        "include/score/charconv.hpp",
        "include/score/chrono.hpp",
        "include/score/circular_buffer.hpp",
        "include/score/deque.hpp",
        "include/score/execution.hpp",
        "include/score/expected.hpp",
        "include/score/float.hpp",
        "include/score/for_each_tuple_element.hpp",
        "include/score/forward_list.hpp",
        "include/score/functional.hpp",
        "include/score/hash.hpp",
        "include/score/inplace_vector.hpp",
        "include/score/jthread.hpp",
        "include/score/latch.hpp",
        "include/score/list.hpp",
        "include/score/map.hpp",
        "include/score/math.hpp",
        "include/score/math_constants.hpp",
        "include/score/member_iterator.hpp",
        "include/score/memory.hpp",
        "include/score/memory_resource.hpp",
        "include/score/move_only_function.hpp",
        "include/score/multi_span.hpp",
        "include/score/narrow.hpp",
        "include/score/numeric.hpp",
        "include/score/optional.hpp",
        "include/score/overload.hpp",
        "include/score/pmr.hpp",
        "include/score/private/algorithm/clamp.hpp",
        "include/score/private/algorithm/find_if_unique.hpp",
        "include/score/private/algorithm/map_to.hpp",
        "include/score/private/algorithm/transform_if.hpp",
        "include/score/private/assert/assert_impl.hpp",
        "include/score/private/bit/bit_cast.hpp",
        "include/score/private/container/circular_buffer_iterator.hpp",
        "include/score/private/container/intrusive_forward_list.hpp",
        "include/score/private/execution/back_binder.hpp",
        "include/score/private/execution/basic_operation.hpp",
        "include/score/private/execution/connect.hpp",
        "include/score/private/execution/cpu_context.hpp",
        "include/score/private/execution/cpu_relax_aarch64.hpp",
        "include/score/private/execution/cpu_relax_x86_64.hpp",
        "include/score/private/execution/cpu_scheduler.hpp",
        "include/score/private/execution/cpu_scheduler_op_state.hpp",
        "include/score/private/execution/cpu_scheduler_sender.hpp",
        "include/score/private/execution/exponential_backoff.hpp",
        "include/score/private/execution/operation_state_t.hpp",
        "include/score/private/execution/receiver_t.hpp",
        "include/score/private/execution/schedule.hpp",
        "include/score/private/execution/scheduler_t.hpp",
        "include/score/private/execution/sender_adaptor_closure.hpp",
        "include/score/private/execution/sender_t.hpp",
        "include/score/private/execution/set_stopped.hpp",
        "include/score/private/execution/set_value.hpp",
        "include/score/private/execution/spin_mutex.hpp",
        "include/score/private/execution/start.hpp",
        "include/score/private/execution/then.hpp",
        "include/score/private/execution/then_receiver.hpp",
        "include/score/private/execution/then_sender.hpp",
        "include/score/private/execution/thread_pool.hpp",
        "include/score/private/execution/thread_pool_queue.hpp",
        "include/score/private/execution/thread_pool_worker_count.hpp",
        "include/score/private/functional/identity.hpp",
        "include/score/private/functional/invoke.hpp",
        "include/score/private/functional/move_only_function.hpp",
        "include/score/private/iterator/at.hpp",
        "include/score/private/iterator/data.hpp",
        "include/score/private/iterator/iterator.hpp",
        "include/score/private/iterator/size.hpp",
        "include/score/private/math/aarch64_neon.hpp",
        "include/score/private/math/div_round_closest.hpp",
        "include/score/private/math/equals_bitexact.hpp",
        "include/score/private/math/x86_64_sse42.hpp",
        "include/score/private/memory/construct_at.hpp",
        "include/score/private/memory/make_obj_using_allocator.hpp",
        "include/score/private/memory/make_shared.hpp",
        "include/score/private/memory/uninitialized_construct_using_allocator.hpp",
        "include/score/private/memory/uninitialized_move.hpp",
        "include/score/private/memory/uninitialized_value_construct.hpp",
        "include/score/private/memory/unique_ptr.hpp",
        "include/score/private/memory/unique_ptr_deleter.hpp",
        "include/score/private/memory/uses_allocator_construction_args.hpp",
        "include/score/private/memory_resource/chunk_list.hpp",
        "include/score/private/memory_resource/chunk_size_and_alignment.hpp",
        "include/score/private/memory_resource/free_list.hpp",
        "include/score/private/memory_resource/memory_resource.hpp",
        "include/score/private/memory_resource/monotonic_buffer_resource.hpp",
        "include/score/private/memory_resource/polymorphic_allocator.hpp",
        "include/score/private/memory_resource/pool.hpp",
        "include/score/private/memory_resource/pool_options.hpp",
        "include/score/private/memory_resource/resource_adaptor.hpp",
        "include/score/private/memory_resource/unsynchronized_pool_resource.hpp",
        "include/score/private/numeric/lerp.hpp",
        "include/score/private/numeric/saturate_cast.hpp",
        "include/score/private/simd/aarch64_neon_backend.hpp",
        "include/score/private/simd/abi.hpp",
        "include/score/private/simd/array.hpp",
        "include/score/private/simd/data_types.hpp",
        "include/score/private/simd/default_backend.hpp",
        "include/score/private/simd/math.hpp",
        "include/score/private/simd/sse42_backend.hpp",
        "include/score/private/stop_token/nostopstate_t.hpp",
        "include/score/private/stop_token/stop_callback.hpp",
        "include/score/private/stop_token/stop_source.hpp",
        "include/score/private/stop_token/stop_state.hpp",
        "include/score/private/stop_token/stop_token.hpp",
        "include/score/private/thread/pthread_attr.hpp",
        "include/score/private/thread/this_thread.hpp",
        "include/score/private/thread/thread.hpp",
        "include/score/private/thread/thread_id.hpp",
        "include/score/private/thread/thread_name_hint.hpp",
        "include/score/private/thread/thread_stack_size_hint.hpp",
        "include/score/private/type_traits/conjunction.hpp",
        "include/score/private/type_traits/invoke_traits.hpp",
        "include/score/private/type_traits/is_derived_from.hpp",
        "include/score/private/type_traits/is_detected.hpp",
        "include/score/private/type_traits/is_expected.hpp",
        "include/score/private/type_traits/is_hash_for.hpp",
        "include/score/private/type_traits/is_inplace_vector.hpp",
        "include/score/private/type_traits/is_iterable.hpp",
        "include/score/private/type_traits/is_maplike_container.hpp",
        "include/score/private/type_traits/is_move_only_function.hpp",
        "include/score/private/type_traits/is_optional.hpp",
        "include/score/private/type_traits/is_pair.hpp",
        "include/score/private/type_traits/is_span.hpp",
        "include/score/private/type_traits/is_static_vector.hpp",
        "include/score/private/type_traits/is_tuple.hpp",
        "include/score/private/type_traits/is_unsigned_integer_type.hpp",
        "include/score/private/type_traits/iterator_category.hpp",
        "include/score/private/type_traits/remove_cvref.hpp",
        "include/score/private/type_traits/type_identity.hpp",
        "include/score/private/type_traits/void_t.hpp",
        "include/score/private/utility/as_const.hpp",
        "include/score/private/utility/ignore.hpp",
        "include/score/private/utility/in_place_t.hpp",
        "include/score/private/utility/in_place_type_t.hpp",
        "include/score/private/utility/in_range.hpp",
        "include/score/private/utility/int_cmp.hpp",
        "include/score/private/utility/make_offset_index_sequence.hpp",
        "include/score/private/utility/static_const.hpp",
        "include/score/private/utility/to_underlying.hpp",
        "include/score/range_pair.hpp",
        "include/score/set.hpp",
        "include/score/simd.hpp",
        "include/score/size.hpp",
        "include/score/span.hpp",
        "include/score/static_vector.hpp",
        "include/score/stop_token.hpp",
        "include/score/string.hpp",
        "include/score/string_view.hpp",
        "include/score/tuple.hpp",
        "include/score/type_map.hpp",
        "include/score/type_traits.hpp",
        "include/score/unordered_map.hpp",
        "include/score/unordered_set.hpp",
        "include/score/utility.hpp",
        "include/score/variant.hpp",
        "include/score/vector.hpp",
        "include/score/zip_iterator.hpp",
    ],
    includes = ["include"],
    tags = ["asil-b"],
    visibility = ["//visibility:public"],
    deps = [":math"],
)

cc_library(
    name = "futurecpp_test_support",
    testonly = True,
    hdrs = [
        "include/score/assert_support.hpp",
        "include/score/private/assert/assert_support_impl.hpp",
    ],
    includes = ["include"],
    visibility = ["//visibility:public"],
    deps = [":futurecpp"],
)

cc_binary(
    name = "expected_example",
    srcs = ["examples/expected_example.cpp"],
    deps = [":futurecpp"],
)

cc_library(
    name = "futurecpp_internal",
    testonly = True,
    srcs = glob([
        "src/*.cpp",
    ]),
    hdrs = glob([
        "include/score/private/algorithm/*.hpp",
        "include/score/private/assert/*.hpp",
        "include/score/private/bit/*.hpp",
        "include/score/private/container/*.hpp",
        "include/score/private/execution/*.hpp",
        "include/score/private/functional/*.hpp",
        "include/score/private/iterator/*.hpp",
        "include/score/private/math/*.hpp",
        "include/score/private/memory/*.hpp",
        "include/score/private/memory_resource/*.hpp",
        "include/score/private/numeric/*.hpp",
        "include/score/private/simd/*.hpp",
        "include/score/private/stop_token/*.hpp",
        "include/score/private/thread/*.hpp",
        "include/score/private/type_traits/*.hpp",
        "include/score/private/utility/*.hpp",
        "include/score/*.hpp",
    ]),
    copts = SCORE_LANGUAGE_FUTURECPP_TEST_COPTS,
    defines = SCORE_LANGUAGE_FUTURECPP_ASSERT_DEFINES,
    linkopts = SCORE_LANGUAGE_FUTURECPP_TEST_LINKOPTS,
    strip_include_prefix = "include",
    visibility = ["//score/language/futurecpp/tests:__subpackages__"],
    deps = [":math"],
)
